{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Palma\\\\Desktop\\\\EPICODE\\\\REACT\\\\Settimana 3\\\\Day 1\\\\u3-w3-d1\\\\src\\\\components\\\\CompanySearchResults.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport Job from \"./Job\";\n/* import { useParams } from \"react-router-dom\"; */\n\nimport { getDataAction } from \"../redux/actions/index\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst dispatch = useDispatch();\n\nconst CompanySearchResults = () => {\n  _s();\n\n  /* const [jobs, setJobs] = useState([]); */\n\n  /* const params = useParams(); */\n  const aziende = useSelector(state => state.dataArray.content);\n  const baseEndpoint = \"https://strive-benchmark.herokuapp.com/api/jobs?company=\";\n  useEffect(() => {\n    dispatch(getDataAction());\n    /* getJobs(); */\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  /*  const getJobs = async () => {\n    try {\n      const response = await fetch(baseEndpoint + params.companyName);\n      if (response.ok) {\n        const { data } = await response.json();\n        setJobs(data);\n      } else {\n        alert(\"Error fetching results\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }; */\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: jobs.map(jobData => /*#__PURE__*/_jsxDEV(Job, {\n          data: jobData\n        }, jobData._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CompanySearchResults, \"gi2+Ez6CS4oHbdF20q5s+rWnJ8k=\", false, function () {\n  return [useSelector];\n});\n\n_c = CompanySearchResults;\nexport default CompanySearchResults;\n\nvar _c;\n\n$RefreshReg$(_c, \"CompanySearchResults\");","map":{"version":3,"names":["useEffect","useState","Container","Row","Col","Job","getDataAction","useDispatch","useSelector","dispatch","CompanySearchResults","aziende","state","dataArray","content","baseEndpoint","jobs","map","jobData","_id"],"sources":["C:/Users/Palma/Desktop/EPICODE/REACT/Settimana 3/Day 1/u3-w3-d1/src/components/CompanySearchResults.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport Job from \"./Job\";\n/* import { useParams } from \"react-router-dom\"; */\nimport { getDataAction } from \"../redux/actions/index\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nconst dispatch = useDispatch();\nconst CompanySearchResults = () => {\n  /* const [jobs, setJobs] = useState([]); */\n  /* const params = useParams(); */\n  const aziende = useSelector((state) => state.dataArray.content);\n\n  const baseEndpoint =\n    \"https://strive-benchmark.herokuapp.com/api/jobs?company=\";\n\n  useEffect(() => {\n    dispatch(getDataAction());\n    /* getJobs(); */\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  /*  const getJobs = async () => {\n    try {\n      const response = await fetch(baseEndpoint + params.companyName);\n      if (response.ok) {\n        const { data } = await response.json();\n        setJobs(data);\n      } else {\n        alert(\"Error fetching results\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }; */\n\n  return (\n    <Container>\n      <Row>\n        <Col>\n          {jobs.map((jobData) => (\n            <Job key={jobData._id} data={jobData} />\n          ))}\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default CompanySearchResults;\n"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,QAAoC,iBAApC;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA;;AACA,SAASC,aAAT,QAA8B,wBAA9B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;;AAEA,MAAMC,QAAQ,GAAGF,WAAW,EAA5B;;AACA,MAAMG,oBAAoB,GAAG,MAAM;EAAA;;EACjC;;EACA;EACA,MAAMC,OAAO,GAAGH,WAAW,CAAEI,KAAD,IAAWA,KAAK,CAACC,SAAN,CAAgBC,OAA5B,CAA3B;EAEA,MAAMC,YAAY,GAChB,0DADF;EAGAf,SAAS,CAAC,MAAM;IACdS,QAAQ,CAACH,aAAa,EAAd,CAAR;IACA;IACA;EACD,CAJQ,EAIN,EAJM,CAAT;EAMA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEE,oBACE,QAAC,SAAD;IAAA,uBACE,QAAC,GAAD;MAAA,uBACE,QAAC,GAAD;QAAA,UACGU,IAAI,CAACC,GAAL,CAAUC,OAAD,iBACR,QAAC,GAAD;UAAuB,IAAI,EAAEA;QAA7B,GAAUA,OAAO,CAACC,GAAlB;UAAA;UAAA;UAAA;QAAA,QADD;MADH;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAWD,CAvCD;;GAAMT,oB;UAGYF,W;;;KAHZE,oB;AAyCN,eAAeA,oBAAf"},"metadata":{},"sourceType":"module"}