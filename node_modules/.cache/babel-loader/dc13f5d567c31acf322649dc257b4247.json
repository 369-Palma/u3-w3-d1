{"ast":null,"code":"export const ADD_TO_FAVOURITE = \"ADD_TO_FAVOURITE\";\nexport const REMOVE_FROM_FAVOURITE = \"REMOVE_FROM_FAVOURITE\";\nexport const GET_DATA = \"GET_DATA\";\nexport const GET_ERROR_MESSAGE = \"GET_ERROR_MESSAGE\";\nexport const addToFav = company => ({\n  type: ADD_TO_FAVOURITE,\n  payload: company\n});\nconst baseEndpoint = \"https://strive-benchmark.herokuapp.com/api/jobs?sch=\";\nexport const removeFromFav = company => ({\n  type: REMOVE_FROM_FAVOURITE,\n  payload: company\n});\nexport const getDataAction = query => {\n  return async dispatch => {\n    try {\n      const res = await fetch(baseEndpoint + query + \"&limit=20\");\n\n      if (res.ok) {\n        const {\n          data\n        } = await res.json();\n        dispatch({\n          type: GET_DATA,\n          payload: data\n        });\n      } else {\n        dispatch({\n          type: GET_ERROR_MESSAGE,\n          payload: \"An error occurred during the call\"\n        });\n      }\n    } catch (error) {\n      dispatch({\n        type: GET_ERROR_MESSAGE,\n        payload: error.message\n      });\n    }\n  };\n};","map":{"version":3,"names":["ADD_TO_FAVOURITE","REMOVE_FROM_FAVOURITE","GET_DATA","GET_ERROR_MESSAGE","addToFav","company","type","payload","baseEndpoint","removeFromFav","getDataAction","query","dispatch","res","fetch","ok","data","json","error","message"],"sources":["C:/Users/Palma/Desktop/EPICODE/REACT/Settimana 3/Day 2/homework-w3-d2-react/src/redux/actions/index.js"],"sourcesContent":["export const ADD_TO_FAVOURITE = \"ADD_TO_FAVOURITE\";\r\nexport const REMOVE_FROM_FAVOURITE = \"REMOVE_FROM_FAVOURITE\";\r\nexport const GET_DATA = \"GET_DATA\";\r\nexport const GET_ERROR_MESSAGE = \"GET_ERROR_MESSAGE\";\r\n\r\nexport const addToFav = (company) => ({\r\n  type: ADD_TO_FAVOURITE,\r\n  payload: company,\r\n});\r\n\r\nconst baseEndpoint = \"https://strive-benchmark.herokuapp.com/api/jobs?sch=\";\r\n\r\nexport const removeFromFav = (company) => ({\r\n  type: REMOVE_FROM_FAVOURITE,\r\n  payload: company,\r\n});\r\n\r\nexport const getDataAction = (query) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const res = await fetch(baseEndpoint + query + \"&limit=20\");\r\n      if (res.ok) {\r\n        const { data } = await res.json();\r\n        dispatch({\r\n          type: GET_DATA,\r\n          payload: data,\r\n        });\r\n      } else {\r\n        dispatch({\r\n          type: GET_ERROR_MESSAGE,\r\n          payload: \"An error occurred during the call\",\r\n        });\r\n      }\r\n    } catch (error) {\r\n      dispatch({\r\n        type: GET_ERROR_MESSAGE,\r\n        payload: error.message,\r\n      });\r\n    }\r\n  };\r\n};\r\n"],"mappings":"AAAA,OAAO,MAAMA,gBAAgB,GAAG,kBAAzB;AACP,OAAO,MAAMC,qBAAqB,GAAG,uBAA9B;AACP,OAAO,MAAMC,QAAQ,GAAG,UAAjB;AACP,OAAO,MAAMC,iBAAiB,GAAG,mBAA1B;AAEP,OAAO,MAAMC,QAAQ,GAAIC,OAAD,KAAc;EACpCC,IAAI,EAAEN,gBAD8B;EAEpCO,OAAO,EAAEF;AAF2B,CAAd,CAAjB;AAKP,MAAMG,YAAY,GAAG,sDAArB;AAEA,OAAO,MAAMC,aAAa,GAAIJ,OAAD,KAAc;EACzCC,IAAI,EAAEL,qBADmC;EAEzCM,OAAO,EAAEF;AAFgC,CAAd,CAAtB;AAKP,OAAO,MAAMK,aAAa,GAAIC,KAAD,IAAW;EACtC,OAAO,MAAOC,QAAP,IAAoB;IACzB,IAAI;MACF,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAACN,YAAY,GAAGG,KAAf,GAAuB,WAAxB,CAAvB;;MACA,IAAIE,GAAG,CAACE,EAAR,EAAY;QACV,MAAM;UAAEC;QAAF,IAAW,MAAMH,GAAG,CAACI,IAAJ,EAAvB;QACAL,QAAQ,CAAC;UACPN,IAAI,EAAEJ,QADC;UAEPK,OAAO,EAAES;QAFF,CAAD,CAAR;MAID,CAND,MAMO;QACLJ,QAAQ,CAAC;UACPN,IAAI,EAAEH,iBADC;UAEPI,OAAO,EAAE;QAFF,CAAD,CAAR;MAID;IACF,CAdD,CAcE,OAAOW,KAAP,EAAc;MACdN,QAAQ,CAAC;QACPN,IAAI,EAAEH,iBADC;QAEPI,OAAO,EAAEW,KAAK,CAACC;MAFR,CAAD,CAAR;IAID;EACF,CArBD;AAsBD,CAvBM"},"metadata":{},"sourceType":"module"}